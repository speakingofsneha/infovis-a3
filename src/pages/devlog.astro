---
//devlog
import '../styles/devlog.scss';
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dev Log</title>
</head>
<body>
    <div class="centered">
        <div class="container">
            <h1 class="header">Dev Log</h1>
            <p class="copy"> It's currently 11:38 PM AEST; lots left to do and only a week to go until it's due :D
                I'll probably be spending the night getting the bulk of the demo done so I can start the final round of testing. <br>
                But before that, I thought I'd quickly jot down the how + why behind my dev process so future me knows what was going on. Documentation. 
            </p>

            <table>
                <tr>
                    <td>June 6</td>
                    <td>Final tweaks to the landing page and application, finish iterations based on final testing round (Added advanced filters and uncomfylb table). Ran the project through a final review with <a href="https://www.linkedin.com/in/kabilananbukani/?originalSubdomain=sg" target="_blank">kabi</a> before turning it in. Checked that all nav links (especially after the analytics/index page swap) worked as intended. </td>
                </tr>
                <tr>
                    <td>June 5</td>
                    <td>Testing and sequentially iterating based on feedback, since this is the final testing round. Added final content and images to the landing and analytics pages, and ensured the MVP of the landing page was complete. Fixed minor bugs in the advanced filters, and polished the SCSS for consistency. Unfortunately no time for onboarding :( Finalized the narrative and usability documentation, and reviewed all comments to ensure the it was comprehensive and ready for submission.</td>
                </tr>
                <tr>
                    <td>May 30,31</td>
                    <td>Wrote pandas scripts to clean and preprocess data across time ranges and floors/zones, ensuring that all charts could be filtered accurately. Added React state-based filtering for time range and floor/zone to all charts, including the uncomfylb leaderboard. Fixed paths after renaming about.astro to index.astro and index.astro to analytics.astro, and updated all SCSS file names and imports accordingly. Improved chart styling and hover interactions, and ensured that Apercu Pro was used for chart labels where possible.</td>
                </tr>
                <tr>
                    <td>May 29</td>
                    <td>Removed problematic zones (8, 31, 46, 49, 243, 402, 403) from filtering due to blank cells and identical month/quarter data. This improved the accuracy and clarity of the analytics dashboard. Also reviewed and improved the filtering logic in the React components to ensure only valid data was displayed in the charts and tables.</td>
                </tr>
                <tr>
                    <td>Mar 28</td>
                    <td>Fixed script files and parent filtering logic for the data processing pipeline. This was an early step to ensure that the backend scripts could handle hierarchical relationships between zones and floors, which was essential for the dynamic filtering features implemented later in the React components.</td>
                </tr>
                <tr>
                    <td>May 27</td>
                    <td>Initial commit to GitHub, improved the tech stack by integrating React, react-plotly, Astro, and Tailwind CSS. Set up the main project repository, scaffolded the initial file structure, and began integrating Plotly.js for interactive charts. Prototyped the MVP for the home, thermal comfort, and air quality pages, and started work on the sidebar navigation and favicon.</td>
                </tr>
                <tr>
                    <td>May 26</td>
                    <td>Initialized the project and set up the development environment by following <a href="https://medium.com/@davidjohnakim/using-plotly-js-with-react-f792ab426248">this tutorial</a>. Created the first basic chart using Plotly and React, and confirmed that the data pipeline from CSV to chart was functional. This was a key milestone in validating the technical approach for the dashboard and laid the foundation for later chart and filter features.</td>
                </tr>
                <tr>
                    <td>May 19</td>
                    <td>Created the first local iteration of the web app. The initial version was a simple static page with hardcoded data and basic navigation, serving as a proof of concept for the dashboard layout and user flow. This early prototype helped clarify the requirements for the MVP and guided the design of the landing and analytics pages.</td>
                </tr>
            </table>
        </div>
    </div>
</body>
</html> 