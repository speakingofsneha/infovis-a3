import React from 'react';
import '../styles/analytics.scss';

// hardcoded data for the top 5 most uncomfortable spaces based on the python analysis script
// this comes from comfort_leaderboard.csv generated by datacleaning/scripts/uncomfy_lb.py
// 'ground' floor renamed to 'lobby' for better user understanding
const data = [
  { zone: '50', floor: 'Lobby', discomfort: 73.4, trend: '+100%', priority: 'Critical' },
  { zone: '402', floor: '4', discomfort: 51.1, trend: 'No April Data', priority: 'High' },
  { zone: '47', floor: 'Lobby', discomfort: 42.0, trend: '+100%', priority: 'High' },
  { zone: '403', floor: '4', discomfort: 33.2, trend: 'No April Data', priority: 'Medium' },
  { zone: '8', floor: 'Lobby', discomfort: 32.8, trend: 'No April Data', priority: 'Medium' },
];

// color coding for progress bars based on severity thresholds
// using a traffic light system - red/yellow/green for intuitive understanding
function getBarColor(val) {
  if (val >= 60) return '#ED8181'; // red for critical discomfort levels
  if (val >= 35) return '#EDCD81'; // yellow for moderate issues
  return '#6FC39E'; // green for acceptable levels (though none in our top 5)
}

function UncomfortableSpacesTable() {
  return (
    <div className="uncomfortable-spaces-table">
      {/* clear title explaining what this table shows */}
      <div className="table-title">
        Top 5 Most Uncomfortable Zones
      </div>
      
      <table className="data-table">
        <thead>
          <tr>
            {/* using bem modifier classes for different column widths and styling */}
            <th className="table-header table-header--zone">Zone</th>
            <th className="table-header table-header--floor">Floor</th>
            <th className="table-header table-header--discomfort">Discomfort Score</th>
            <th className="table-header table-header--trend">Trend (% Change)</th>
            <th className="table-header table-header--priority">Action Priority</th>
          </tr>
        </thead>
        <tbody>
          {/* mapping over data array to generate table rows dynamically */}
          {data.map((row, i) => (
            <tr key={i} className="table-row">
              {/* zone id - simple text display */}
              <td className="table-cell table-cell--zone">{row.zone}</td>
              
              {/* floor level - using friendly names like 'lobby' instead of technical terms */}
              <td className="table-cell table-cell--floor">{row.floor}</td>
              
              {/* discomfort score with visual progress bar */}
              <td className="table-cell table-cell--discomfort">
                {/* rounded percentage for cleaner display */}
                <span className="discomfort-value">
                  {Math.round(row.discomfort)}%
                </span>
                
                {/* visual progress bar to make data easier to scan quickly */}
                <div className="progress-bar">
                  <div 
                    className="progress-fill"
                    style={{
                      // cap at 100% to prevent overflow, dynamic width based on score
                      width: `${Math.min(row.discomfort, 100)}%`,
                      // color coding based on severity for immediate visual feedback
                      backgroundColor: getBarColor(row.discomfort)
                    }}
                  />
                </div>
              </td>
              
              {/* trend data - shows month over month change or data availability */}
              <td className="table-cell table-cell--trend">{row.trend}</td>
              
              {/* action priority - helps facility managers prioritize their work */}
              <td className="table-cell table-cell--priority">
                <span className="priority-text">{row.priority}</span>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

export default UncomfortableSpacesTable;
